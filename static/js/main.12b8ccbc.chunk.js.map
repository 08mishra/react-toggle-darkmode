{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","color","backgroundColor","Style","setMyStyle","btn","setBtn","className","style","onClick","border","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"uNA0DgBA,MAvDf,WAGI,MAA4BC,mBAAS,CACjCC,MAAO,QACPC,gBAAiB,SAFrB,mBAAOC,EAAP,KAAcC,EAAd,KAMA,EAAsBJ,mBAAS,oBAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAsBA,OAAS,mCAGL,sBACIC,UAAY,kBADhB,UAEA,sBACIA,UAAY,kBAChBC,MAAUL,EAFV,UAGA,iDAHA,IAI0B,qDAJ1B,IAK6B,8BAE7B,yBACOM,QAjCW,WACE,UAAhBN,EAAMF,OACNG,EAAW,CACPH,MAAO,QACPC,gBAAiB,SAErBI,EAAO,sBAIPF,EAAW,CACPH,MAAO,QACPC,gBAAiB,QACjBQ,OAAQ,mBAEZJ,EAAO,uBAmBXC,UAAY,gCAFZ,cAEgDF,EAFhD,OAF6B,QAL7B,OAFA,UCzBMM,EAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,6BAAsBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDpBQ,IAASC,OAEL,cACA,EADA,IAEAC,SAASC,eAAe,SAM5BZ,K","file":"static/js/main.12b8ccbc.chunk.js","sourcesContent":[" import './App.css';\n import React, { useState } from 'react';\n\n function App() {\n\n\n     const [Style, setMyStyle] = useState({\n         color: 'black',\n         backgroundColor: '#eee'\n\n     })\n\n     const [btn, setBtn] = useState('enable dark mode')\n\n     const toggleMyStyle = () => {\n         if (Style.color === 'white') {\n             setMyStyle({\n                 color: 'black',\n                 backgroundColor: '#eee'\n             })\n             setBtn('enable dark mode')\n\n\n         } else {\n             setMyStyle({\n                 color: 'white',\n                 backgroundColor: 'black',\n                 border: '2px solid blue'\n             })\n             setBtn('enable light mode')\n         }\n     }\n\n\n     return ( <\n         >\n\n         <\n         div className = 'jumbo-container' >\n         <\n         div className = \"jumbotron jumbo\"\n         style = { Style } >\n         <\n         h1 > Hello, world! < /h1> <\n         p > hey some text here < /p> <\n         p >\n         <\n         button onClick = { toggleMyStyle }\n         className = \"btn btn-primary btn-lg button\" > { btn } < /button>  < /\n         p > <\n         /div> < /\n         div >\n\n         <\n         />\n     );\n }\n\n export default App;","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import ('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\n    <\n    App / > ,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}